import logging
import random
import re
import sqlite3
import time

import requests
import telebot
import vk_api
from progress.bar import Bar
from telebot import types

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–≥–µ—Ä–∞
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

BOT_TOKEN = "5966237253:AAEHoe4sTX7H1xEp-rH-FapjBlLyWjALLew"
bot = telebot.TeleBot(BOT_TOKEN)
# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ –í–∫–æ–Ω—Ç–∞–∫—Ç–µ
vk_session = vk_api.VkApi(
    token='vk1.a.JdzjHwnTBsGuSUmrfPxgNyldA7QGFw3zgW5UMHbfRIvVQO59vV8VSPhcihUKij-56WuVdHcswa3yqN62vJPCuJwG8_Y68NP58RiwOZlTx17URSE2EAykWVyWP3llpTfJsuJ6xWDaniYnRIX6-xmn3P51dH7zN0d0fLwZMOniP46qKXuf5N0ONAMu1Si0m4mROMunYHC2_XFvkK-8iM9CSA')
vk = vk_session.get_api();

def get_all_winners(user_id: str):
    conn = sqlite3.connect('db.sqlite')
    cursor = conn.cursor()
    cursor.execute('SELECT * FROM winners WHERE user_id = ?', (user_id,))
    winners_rows = cursor.fetchall()
    winners = []
    for row in winners_rows:
        winners_dict = dict(id=row[0], winner=row[2], winner_url=row[3], post=row[4], likes=row[5], create_at=row[6])
        winners.append(winners_dict)
    conn.commit()
    conn.close()
    return winners


def db_user_add(user_id: str):
    conn = sqlite3.connect('db.sqlite')
    cursor = conn.cursor()
    cursor.execute('INSERT INTO users(user_id) VALUES(?)', (user_id,))
    conn.commit()
    conn.close()


def db_winner_add(user_id: int, winner: str, winner_url: str, post: str, likes: int):
    conn = sqlite3.connect('db.sqlite')
    cursor = conn.cursor()
    cursor.execute('INSERT INTO winners(user_id, winner, winner_url, post, likes) VALUES(?,?,?,?,?)',
                   (user_id, winner, winner_url, post, likes))
    conn.commit()
    conn.close()


@bot.message_handler(commands=['start'])
def start_message(message):
    logger.info("–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ")
    conn = sqlite3.connect('db.sqlite')
    cursor = conn.cursor()
    user_id = message.from_user.id
    # Check if user already exists in the database
    cursor.execute('SELECT COUNT(*) FROM users WHERE user_id=?', (str(user_id),))
    if cursor.fetchone()[0] == 0:
        conn.close()
        db_user_add(str(user_id))
    bot.send_message(user_id,
                     '''
                     Roketvotile - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π –≤ Telegram –∏ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏!üéâüîç
                 
–ù–∞—à –±–æ—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à–∏ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –ª–∞–π–∫–æ–≤, —Ä–µ–ø–æ—Å—Ç–æ–≤ –∏ –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –ø–æ—Å—Ç—ã –≤ 
VK üéÅüéØ

–ö—Ä–æ–º–µ —Ç–æ–≥–æ, –Ω–∞—à –±–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã–º —Ä–æ–∑—ã–≥—Ä—ã—à–∞–º. –í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é 
–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, —á–∏—Å–ª–µ –ª–∞–π–∫–æ–≤, —Ä–µ–ø–æ—Å—Ç–∞—Ö –∏ –ø–æ–¥–ø–∏—Å–∫–∞—Ö, –∞ —Ç–∞–∫–∂–µ –æ –≤—Å–µ—Ö –ø–æ–±–µ–¥–∏—Ç–µ–ª—è—Ö –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π üìäüèÜ

–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–æ–¥–∏–º—ã—Ö –∞–∫—Ü–∏–π, –ø–æ–Ω–∏–º–∞—Ç—å, –∫–∞–∫–∏–µ –ø–æ—Å—Ç—ã –∏–º–µ—é—Ç –Ω–∞–∏–±–æ–ª—å—à—É—é 
–ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –≤–∞—à–µ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏, –∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤–∑–≤–µ—à–µ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –≤–∞—à–∏–º 
—Å–æ–æ–±—â–µ—Å—Ç–≤–æ–ºüí°üìà

Roketvotile - –≤–∞—à –Ω–µ–∑–∞–º–µ–Ω–∏–º—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π –∏ –∞–Ω–∞–ª–∏–∑–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–µ–≥–æ–¥–Ω—è –∏ 
–ø–æ–¥–∞—Ä–∏—Ç–µ —Å–≤–æ–µ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –∞–∫—Ü–∏–∏ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ø—Ä–∏–∑—ã!üôå‚ú® 
                     '''
                     )
    markup = types.ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
    item1 = types.KeyboardButton('üèÜ –†–æ–∑—ã–≥—Ä—ã—à')
    item2 = types.KeyboardButton('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    item3 = types.KeyboardButton('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
    markup.add(item1)
    markup.add(item2, item3)

    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:", reply_markup=markup)


@bot.message_handler(content_types=['text'])
def handle_message(message):
    if message.text == 'sticker':
        bot.send_sticker(message.chat.id, 'CAADAgADsQADWQMDAAEJK1niI56hlhYE')
    if message.text == "üèÜ –†–æ–∑—ã–≥—Ä—ã—à":
            bot.send_message(message.from_user.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç VK (https://vk.com/wall-************)')
            bot.register_next_step_handler(message, handle_lottery)



    if message.text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
        winners = get_all_winners(str(message.chat.id))  # –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
        if not winners:
            bot.send_message(chat_id=message.chat.id, text="–ù–µ—Ç –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π")
            return

        text = "–°–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π:\n"
        for idx, winner in enumerate(winners, 1):
            text += f"{idx}) –†–æ–∑—ã–≥—Ä—ã—à ‚Ññ{winner['id']} –æ—Ç {winner['create_at'].strftime('%d.%m.%Y %H:%M')} " \
                    f"–Ω–∞ –ø–æ—Å—Ç—É {winner['post']}, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ " \
                    f"–ª–∞–π–∫–æ–≤: {winner['likes']}, –ü–æ–±–µ–¥–∏—Ç–µ–ª—å: <a href='{winner['winner_url']}'>{winner['winner']}</a>\n"

        bot.send_message(message.chat.id, text, disable_web_page_preview=True, parse_mode="HTML")
    if message.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏":
        bot.send_message(message.from_user.id, '–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!‚è≥')


def handle_lottery(message):
    try:
        logger.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–æ–∑—ã–≥—Ä—ã—à–∞")
        url = message.text
        post_url = url.split('wall-')[1]
        owner_id = post_url.split('_')[0]
        post_id = post_url.split('_')[1]

        response = vk.likes.getList(type='post', owner_id=f'-{owner_id}', count=1000, item_id=post_id, extended=1)

        # –í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –ª–∞–π–∫–Ω—É–ª–∏ –ø–æ—Å—Ç
        # for user in response['items']:
        #     user_info = vk.users.get(user_ids=user['id'], fields='first_name,last_name')[0]
        #     bot.reply_to(message, f'{user_info["first_name"]} {user_info["last_name"]} –ª–∞–π–∫–Ω—É–ª –≤–∞—à –ø–æ—Å—Ç')
        likes = len(response['items'])
        bot.reply_to(message, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤: ' + str(likes) + '‚ù§')
        # –í—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ –ª–∞–π–∫–æ–≤, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        valid = False
        if response['items']:
            while not valid:
                with Bar('Loading', suffix='%(percent)d%%', max=100) as bar:
                    message_text = None
                    message_id = None
                    progress = 0
                    for _ in range(1, 21):
                        time.sleep(0.2)
                        bar.next()
                        progress += 5
                        progress_text = f'<strong>–û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è:</strong> {progress}% ‚è≥\n'
                        new_message_text = f'{progress_text}'

                        if message_text is None:
                            message = bot.send_message(chat_id=message.chat.id, text=new_message_text, parse_mode='HTML')
                            message_id = message.message_id
                        else:
                            bot.edit_message_text(chat_id=message.chat.id, message_id=message_id, text=new_message_text,
                                                  parse_mode='HTML')

                        message_text = new_message_text
                random_user_id = random.choice(response['items'])['id']
                random_user_info = vk.users.get(user_ids=random_user_id, fields='first_name,last_name,photo_200_orig')[0]
                if random_user_info["is_closed"]:
                    bot.send_message(chat_id=message.chat.id,
                                     text=f'–ü—Ä–æ—Ñ–∏–ª—å –∑–∞–∫—Ä—ã—Ç: <a href="https://vk.com/id{random_user_id}">'
                                          f'{random_user_info["first_name"]} {random_user_info["last_name"]}</a>',
                                     parse_mode="HTML")
                    continue
                subs = vk.users.getSubscriptions(user_id=random_user_id)
                if int(owner_id) not in subs['groups']['items']:
                    bot.send_message(chat_id=message.chat.id,
                                     text=f'–ù–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏: <a href="https://vk.com/id{random_user_id}">'
                                          f'{random_user_info["first_name"]} {random_user_info["last_name"]}</a>',
                                     parse_mode="HTML")
                    continue
                valid = True
                # bot.reply_to(message, f'–í—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <a href="https://vk.com/id{random_user_id}">'
                #                       f'{random_user_info["first_name"]} {random_user_info["last_name"]}</a>',
                #              parse_mode="HTML")
                photo_url = random_user_info['photo_200_orig']
                imageProfile = requests.get(photo_url)
                photo_path = f'winner_{message.from_user.id}.jpg'  # –ü—É—Ç—å, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
                with open(photo_path, 'wb') as file:
                    file.write(imageProfile.content)
                bot.send_photo(chat_id=message.chat.id, photo=open(photo_path, 'rb'),
                               caption=f'üéâüèÜ–ü–æ–±–µ–¥–∏—Ç–µ–ª—å: <a href="https://vk.com/id{random_user_id}">'
                                       f'{random_user_info["first_name"]} {random_user_info["last_name"]}</a>üéâüèÜ',
                               parse_mode="HTML")
                db_winner_add(message.chat.id, f'{random_user_info["first_name"]} {random_user_info["last_name"]}',
                              f'https://vk.com/id{random_user_id}', url, likes)
        else:
            bot.reply_to(message, '–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –æ—Å—Ç–∞–≤–∏–ª–∏ –ª–∞–π–∫')
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞: {e}")
        bot.send_message(chat_id=message.chat.id,
                         text=f'–ü—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
                         parse_mode="HTML")

try:
    bot.polling()
    logger.info("–ë–æ—Ç –Ω–∞—á–∞–ª –æ–ø—Ä–æ—Å")
except Exception as e:
    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –æ–ø—Ä–æ—Å–∞: {e}")

